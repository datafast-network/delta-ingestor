name: DataOnChain-CI

on:
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

  push:
    branches:
      - main

env:
  CI: true
  CARGO_TERM_COLOR: always
  REDIS: redis://localhost:6379
  RPC: ${{ vars.RPC }}
  RUST_LOG: info
  IMAGE_NAME: ingestor
  REGISTRY: ${{ vars.REGISTRY }}
jobs:
  verify_pull_request:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install Protoc
        uses: arduino/setup-protoc@v2

      - name: Install stable toolchain with rustfmt available
        uses: actions-rs/toolchain@v1
        with:
             profile: minimal
             toolchain: stable
             override: true
             components: rustfmt, clippy

      - name: Check with fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Check with clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features

      - name: Check with cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test

  build_and_push:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker images
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
